import libs.ascii as ascii

pre NUM_LOOPS = 100

pre LEN_DELAY = 2**16 - 1
pre NUM_DELAY = 100

pre TEST = 0b0101
pre TEST1 = 0x00AA + TEST
pre TEST2 = 27 + 3 / 2.6

rom string[] = "Hello, world!"

rom sad[] = {'s', 'a', '\\'}

ldr a, 'A'

ram array[20]
ram hap

ldr f, &hap
// definitely some issues here to be sorted out
// ldr a, (1 >= (&hap)) == 0
spt a, ram

ldr g, ascii.chars
lpt a, rom

main:
  ldr a, array[0]
  jsr writeout
  // this needs to be sorted out
  // jsr delay + 30
  jmp main


delay:
  for (ldr a, 0; cmp a, NUM_DELAY; add a, 1) {
    for (ldr b, 0; cmp b, LEN_DELAY; add b, 1) {

    }
  }
  rts

writeout:
  for (ldr a, 0; cmp a, NUM_LOOPS; add a, 1) {
    str a, UART
  }
  rts

example(TIMER):
  ram tempa

  str a, tempa
  ldr a, 20
  str a, UART
  ldr a, tempa

  rsc equal

  rti TIMER

example2(FRAME):

  if (ldr a, hap; cmp a, NUM_DELAY isnt equal) {
    ldr a, 20
  } elif (cmp a, 2 is equal) {
    if (cmp b, 1 isnt equal) {
      add b, 2
    }
    ldr a, 21
  } else {
    for (ldr b, 0; cmp b, 20; add b, 1) {
      spt a, gpu
      add h, 1
    }
    ldr a, 40
  }

  rti FRAME
